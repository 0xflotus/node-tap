TAP version 13
# Subtest: ___/.*(node|iojs)(.exe)?.*/~~~spawn.js child
    # Subtest: nesting
        1..2
        # Subtest: first
            1..2
            ok 1 - true is ok
            ok 2 - doag is also okay
        ok 1 - first
        
        # Subtest: second
            ok 1 - but that is ok
            ok 2 - this passes
            not ok 3 - nested failure
              ---
              {"at":{"column":10,"file":"test/test/spawn.js","function":"foo","line":21},"compare":"===","found":1,"source":"tt.equal(1, '1', 'nested failure')\n","wanted":"1"}
              ...
            
            1..3
        not ok 2 - second
        
    not ok 1 - nesting
    
    ok 2 - this passes
    not ok 3 - this fails
      ---
      {"at":{"column":3,"file":"test/test/spawn.js","line":35},"source":"t.fail('this fails')\n"}
      ...
    
    # Subtest: async kid
        1..2
        ok 1 - second timeout
        not ok 2 - first timeout
          ---
          {"at":{"column":7,"file":"test/test/spawn.js","line":40,"method":"_onTimeout"},"foo":"blz","source":"t.ok(false, 'first timeout', { foo: 'blz' })\n"}
          ...
        
    not ok 4 - async kid
    
    ok 5 - pass after async kid
    1..5
not ok 1 - ___/.*(node|iojs)(.exe)?.*/~~~spawn.js child
  ---
  {"args":["___/.*/~~~spawn.js","child"],"command":"___/.*(node|iojs)(.exe)?/~~~","cwd":"___/.*/~~~","exitCode":0}
  ...

# Subtest: nesting
    1..2
    # Subtest: first
        1..2
        ok 1 - true is ok
        ok 2 - doag is also okay
    ok 1 - first
    
    # Subtest: second
        ok 1 - but that is ok
        ok 2 - this passes
        not ok 3 - nested failure
          ---
          {"at":{"column":10,"file":"test/test/spawn.js","function":"foo","line":21},"compare":"===","found":1,"source":"tt.equal(1, '1', 'nested failure')\n","wanted":"1"}
          ...
        
        1..3
    not ok 2 - second
    
not ok 2 - nesting

ok 3 - this passes
not ok 4 - this fails
  ---
  {"at":{"column":3,"file":"test/test/spawn.js","line":35},"source":"t.fail('this fails')\n"}
  ...

# Subtest: async kid
    1..2
    ok 1 - second timeout
    not ok 2 - first timeout
      ---
      {"at":{"column":7,"file":"test/test/spawn.js","line":40,"method":"_onTimeout"},"foo":"blz","source":"t.ok(false, 'first timeout', { foo: 'blz' })\n"}
      ...
    
not ok 5 - async kid

ok 6 - pass after async kid
1..6

